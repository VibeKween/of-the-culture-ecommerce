# Auto-update CSS Design System Documentation
name: Update CSS Documentation

on:
  push:
    branches: [ main ]
    paths:
      - 'shared/css/*.css'
      - 'pages/*/**.css'
      - 'pages/**/*.css'

jobs:
  update-css-docs:
    runs-on: ubuntu-latest
    name: Update Living CSS Documentation
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Analyze CSS changes
        id: css-analysis
        run: |
          echo "🔍 Analyzing complete CSS system changes..."
          
          # Get comprehensive file stats across ALL CSS files (excluding archived)
          CSS_FILES=$(find . -name "*.css" -not -path "./.git/*" -not -path "./docs/BACKUP*" -not -path "./cart-testing/*" -not -path "./ARCHIVE/*")
          TOTAL_CSS_LINES=$(find . -name "*.css" -not -path "./.git/*" -not -path "./docs/BACKUP*" -not -path "./cart-testing/*" -not -path "./ARCHIVE/*" -exec wc -l {} + | tail -1 | awk '{print $1}')
          
          # Archived CSS tracking (separate from active system)
          ARCHIVED_CSS_LINES=$(find ARCHIVE -name "*.css" -exec wc -l {} + 2>/dev/null | tail -1 | awk '{print $1}' || echo "0")
          
          # Main system stats
          MAIN_CSS_LINES=$(wc -l < shared/css/main.css)
          CART_CSS_LINES=$(wc -l < shared/css/cart.css)
          PRODUCT_CSS_LINES=$(wc -l < pages/product/product.css)
          CHECKOUT_CSS_LINES=$(wc -l < pages/checkout/checkout.css)
          
          # Analysis across all files
          CSS_COMMENTS=$(find . -name "*.css" -not -path "./.git/*" -not -path "./docs/BACKUP*" -not -path "./cart-testing/*" -exec grep -c "^/\*\|^[[:space:]]*\/\*" {} + | awk -F: '{sum += $2} END {print sum}')
          MEDIA_QUERIES=$(find . -name "*.css" -not -path "./.git/*" -not -path "./docs/BACKUP*" -not -path "./cart-testing/*" -exec grep -c "@media" {} + | awk -F: '{sum += $2} END {print sum}')
          CUSTOM_PROPS=$(find . -name "*.css" -not -path "./.git/*" -not -path "./docs/BACKUP*" -not -path "./cart-testing/*" -exec grep -c "\-\-color-\|\-\-font-\|\-\-size-" {} + | awk -F: '{sum += $2} END {print sum}')
          
          # Store for later use
          echo "css_lines=$CSS_LINES" >> $GITHUB_OUTPUT
          echo "css_comments=$CSS_COMMENTS" >> $GITHUB_OUTPUT  
          echo "media_queries=$MEDIA_QUERIES" >> $GITHUB_OUTPUT
          echo "custom_props=$CUSTOM_PROPS" >> $GITHUB_OUTPUT
          
          echo "📊 CSS Stats:"
          echo "Lines: $CSS_LINES"
          echo "Comment sections: $CSS_COMMENTS" 
          echo "Media queries: $MEDIA_QUERIES"
          echo "Custom properties: $CUSTOM_PROPS"
      
      - name: Update CSS documentation stats
        run: |
          echo "📝 Updating documentation with latest stats..."
          
          # Update the living document with current stats
          sed -i "s/\*\*CSS File\*\*: \`shared\/css\/main\.css\` ([0-9]* lines)/**CSS File**: \`shared\/css\/main.css\` (${{ steps.css-analysis.outputs.css_lines }} lines)/" docs/CSS-DESIGN-SYSTEM.md
          
          sed -i "s/- \*\*File Size\*\*: [0-9]* lines/- **File Size**: ${{ steps.css-analysis.outputs.css_lines }} lines/" docs/CSS-DESIGN-SYSTEM.md
          
          sed -i "s/- \*\*Comment Sections\*\*: [0-9]* documented areas/- **Comment Sections**: ${{ steps.css-analysis.outputs.css_comments }} documented areas/" docs/CSS-DESIGN-SYSTEM.md
          
          sed -i "s/- \*\*Responsive Breakpoints\*\*: [0-9]* media queries/- **Responsive Breakpoints**: ${{ steps.css-analysis.outputs.media_queries }} media queries/" docs/CSS-DESIGN-SYSTEM.md
          
          # Update last modified date
          TODAY=$(date +"%B %d, %Y")
          sed -i "s/\*\*Last Updated\*\*: .*/\*\*Last Updated\*\*: $TODAY/" docs/CSS-DESIGN-SYSTEM.md
      
      - name: Check if documentation needs updating
        id: check-changes
        run: |
          # Check if there are any changes to commit
          if git diff --quiet docs/CSS-DESIGN-SYSTEM.md; then
            echo "No documentation updates needed"
            echo "needs_update=false" >> $GITHUB_OUTPUT
          else
            echo "Documentation needs updating"
            echo "needs_update=true" >> $GITHUB_OUTPUT
          fi
      
      - name: Commit documentation updates
        if: steps.check-changes.outputs.needs_update == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "CSS Documentation Bot"
          
          git add docs/CSS-DESIGN-SYSTEM.md
          
          git commit -m "📝 Auto-update CSS Design System documentation

          - CSS file size: ${{ steps.css-analysis.outputs.css_lines }} lines
          - Comment sections: ${{ steps.css-analysis.outputs.css_comments }}
          - Media queries: ${{ steps.css-analysis.outputs.media_queries }}
          - Updated: $(date +'%B %d, %Y')
          
          🤖 Generated by CSS Documentation Bot"
          
          git push
      
      - name: Add CSS change summary
        if: steps.check-changes.outputs.needs_update == 'true'
        run: |
          echo "✅ CSS Documentation Updated!"
          echo "📊 Current stats:"
          echo "- Lines: ${{ steps.css-analysis.outputs.css_lines }}"
          echo "- Sections: ${{ steps.css-analysis.outputs.css_comments }}"
          echo "- Breakpoints: ${{ steps.css-analysis.outputs.media_queries }}"